{
	"info": {
		"_postman_id": "d99b64b8-2868-4701-8777-7585f36b433b",
		"name": "Reports",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30811022"
	},
	"item": [
		{
			"name": "Get reports for user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7168/api/users/da9d87e1-f84a-484a-997d-bea07b6fa9ea/reports?monthNumber=9",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7168",
					"path": [
						"api",
						"users",
						"da9d87e1-f84a-484a-997d-bea07b6fa9ea",
						"reports"
					],
					"query": [
						{
							"key": "monthNumber",
							"value": "9"
						}
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Get report with specified id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7168/api/users/da9d87e1-f84a-484a-997d-bea07b6fa9ea/reports/db0abfe7-bf93-41fa-a537-396e76faaced",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7168",
					"path": [
						"api",
						"users",
						"da9d87e1-f84a-484a-997d-bea07b6fa9ea",
						"reports",
						"db0abfe7-bf93-41fa-a537-396e76faaced"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Create report for specified user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"description\": \"Regular job\",\n        \"workedHours\": 8,\n        \"date\": \"2023-09-15\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7168/api/users/da9d87e1-f84a-484a-997d-bea07b6fa9ea/reports/",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7168",
					"path": [
						"api",
						"users",
						"da9d87e1-f84a-484a-997d-bea07b6fa9ea",
						"reports",
						""
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Update report for specified user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"description\": \"Regular job\",\n        \"workedHours\": 6,\n        \"date\": \"2023-09-15\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7168/api/users/da9d87e1-f84a-484a-997d-bea07b6fa9ea/reports/33502293-c17a-4ef8-ac61-75c62ecde637",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7168",
					"path": [
						"api",
						"users",
						"da9d87e1-f84a-484a-997d-bea07b6fa9ea",
						"reports",
						"33502293-c17a-4ef8-ac61-75c62ecde637"
					]
				},
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": []
		},
		{
			"name": "Delete report for specified user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7168/api/users/da9d87e1-f84a-484a-997d-bea07b6fa9ea/reports/33502293-c17a-4ef8-ac61-75c62ecde637",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7168",
					"path": [
						"api",
						"users",
						"da9d87e1-f84a-484a-997d-bea07b6fa9ea",
						"reports",
						"33502293-c17a-4ef8-ac61-75c62ecde637"
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": []
		}
	]
}